/**
 * Portainer API
 * Portainer API is an HTTP API served by Portainer. It is used by the Portainer UI and everything you can do with the UI can be done using the HTTP API. Examples are available at https://gist.github.com/deviantony/77026d402366b4b43fa5918d41bc42f8 You can find out more about Portainer at [http://portainer.io](http://portainer.io) and get some support on [Slack](http://portainer.io/slack/).  # Authentication  Most of the API endpoints require to be authenticated as well as some level of authorization to be used. Portainer API uses JSON Web Token to manage authentication and thus requires you to provide a token in the **Authorization** header of each request with the **Bearer** authentication mechanism.  Example: ``` Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOjEsImV4cCI6MTQ5OTM3NjE1NH0.NJ6vE8FY1WG6jsRQzfMqeatJ4vh2TWAeeYfDhP71YEE ```  # Security  Each API endpoint has an associated access policy, it is documented in the description of each endpoint.  Different access policies are available: * Public access * Authenticated access * Restricted access * Administrator access  ### Public access  No authentication is required to access the endpoints with this access policy.  ### Authenticated access  Authentication is required to access the endpoints with this access policy.  ### Restricted access  Authentication is required to access the endpoints with this access policy. Extra-checks might be added to ensure access to the resource is granted. Returned data might also be filtered.  ### Administrator access  Authentication as well as an administrator role are required to access the endpoints with this access policy.  # Execute Docker requests  Portainer **DO NOT** expose specific endpoints to manage your Docker resources (create a container, remove a volume, etc...).  Instead, it acts as a reverse-proxy to the Docker HTTP API. This means that you can execute Docker requests **via** the Portainer HTTP API.  To do so, you can use the `/endpoints/{id}/docker` Portainer API endpoint (which is not documented below due to Swagger limitations). This endpoint has a restricted access policy so you still need to be authenticated to be able to query this endpoint. Any query on this endpoint will be proxied to the Docker API of the associated endpoint (requests and responses objects are the same as documented in the Docker API).  **NOTE**: You can find more information on how to query the Docker API in the [Docker official documentation](https://docs.docker.com/engine/api/v1.30/) as well as in [this Portainer example](https://gist.github.com/deviantony/77026d402366b4b43fa5918d41bc42f8). 
 *
 * OpenAPI spec version: 1.19.2
 * Contact: info@portainer.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DockerHub', 'model/DockerHubSubset', 'model/DockerHubUpdateRequest', 'model/GenericError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DockerHub'), require('../model/DockerHubSubset'), require('../model/DockerHubUpdateRequest'), require('../model/GenericError'));
  } else {
    // Browser globals (root is window)
    if (!root.PortainerApi) {
      root.PortainerApi = {};
    }
    root.PortainerApi.DockerhubApi = factory(root.PortainerApi.ApiClient, root.PortainerApi.DockerHub, root.PortainerApi.DockerHubSubset, root.PortainerApi.DockerHubUpdateRequest, root.PortainerApi.GenericError);
  }
}(this, function(ApiClient, DockerHub, DockerHubSubset, DockerHubUpdateRequest, GenericError) {
  'use strict';

  /**
   * Dockerhub service.
   * @module api/DockerhubApi
   * @version 1.19.2
   */

  /**
   * Constructs a new DockerhubApi. 
   * @alias module:api/DockerhubApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the dockerHubInspect operation.
     * @callback module:api/DockerhubApi~dockerHubInspectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DockerHubSubset} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve DockerHub information
     * Use this endpoint to retrieve the information used to connect to the DockerHub **Access policy**: authenticated 
     * @param {module:api/DockerhubApi~dockerHubInspectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DockerHubSubset}
     */
    this.dockerHubInspect = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = DockerHubSubset;

      return this.apiClient.callApi(
        '/dockerhub', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the dockerHubUpdate operation.
     * @callback module:api/DockerhubApi~dockerHubUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DockerHub} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update DockerHub information
     * Use this endpoint to update the information used to connect to the DockerHub **Access policy**: administrator 
     * @param {module:model/DockerHubUpdateRequest} body DockerHub information
     * @param {module:api/DockerhubApi~dockerHubUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DockerHub}
     */
    this.dockerHubUpdate = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling dockerHubUpdate");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = DockerHub;

      return this.apiClient.callApi(
        '/dockerhub', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
